{
  "name": "EM-Zilla",
  "version": "2.0.0",
  "description": "Secure Arduino IDE with AI code generation, USB detection, and advanced security features",
  "type": "module",
  "main": "js/app.js",
  "scripts": {
    "dev": "live-server . --port=3000 --entry-file=index.html",
    "dev:secure": "npm run build:dev && live-server dist/ --port=3000",
    
    "build": "node build/build-secure.js",
    "build:dev": "npm run security:scan && npm run build:hashes && npm run build:obfuscate",
    "build:prod": "npm run security:scan && npm run build:hashes && npm run build:obfuscate && npm run build:sign",
    "build:hashes": "node build/generate-hashes.js",
    "build:obfuscate": "webpack --config build/webpack.config.js --mode=production",
    "build:sign": "node build/generate-signature.js",
    
    "serve": "http-server . -p 3000 -c-1",
    "serve:secure": "npm run build:prod && http-server dist/ -p 3000 -c-1 --ssl --key build/ssl/key.pem --cert build/ssl/cert.pem",
    
    "test": "node test-runner.js",
    "test:security": "node security/test-integrity.js",
    "test:integration": "npm run test && npm run test:security",
    
    "lint": "eslint js/ modules/ security/",
    "lint:security": "eslint security/ --config .eslintrc.security.js",
    
    "security:scan": "npm audit --audit-level=moderate",
    "security:audit": "npx snyk test && npm audit --audit-level=high",
    "security:fix": "npm audit fix",
    "security:outdated": "npm outdated --long",
    
    "integrity:check": "node build/verify-integrity.js",
    "integrity:generate": "node build/generate-hashes.js",
    
    "deploy": "npm run build:prod && npm run serve:secure",
    "deploy:dev": "npm run build:dev && npm run serve",
    
    "clean": "rm -rf dist/ && rm -f security/integrity-verifier.js.bak",
    "clean:all": "npm run clean && rm -rf node_modules/ package-lock.json"
  },
  "keywords": [
    "arduino",
    "ide",
    "ai",
    "code-generation",
    "pwa",
    "webserial",
    "termux",
    "psp-vita",
    "cyberzilla",
    "security",
    "integrity",
    "anti-tampering",
    "ml",
    "tensorflow",
    "usb-detection"
  ],
  "author": "Cyberzillaâ„¢ <security@cyberzilla.dev>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/FJ-cyberzilla/EM-Zilla.git"
  },
  "bugs": {
    "url": "https://github.com/FJ-cyberzilla/EM-Zilla/issues"
  },
  "homepage": "https://fj-cyberzilla.github.io/EM-Zilla",
  "funding": {
    "type": "patreon",
    "url": "https://patreon.com/cyberzilla"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "browserslist": {
    "production": [
      "last 2 Chrome versions",
      "last 2 Firefox versions",
      "last 2 Edge versions",
      "last 2 Safari versions",
      "last 2 ChromeAndroid versions",
      "last 2 FirefoxAndroid versions"
    ],
    "development": [
      "last 1 Chrome version",
      "last 1 Firefox version"
    ]
  },
  "dependencies": {
    "tflite": "^1.0.0"
  },
  "devDependencies": {
    "live-server": "^1.2.2",
    "http-server": "^14.1.1",
    "eslint": "^8.45.0",
    
    "webpack": "^5.88.0",
    "webpack-cli": "^5.1.4",
    "webpack-obfuscator": "^3.5.0",
    "terser-webpack-plugin": "^5.3.9",
    "babel-loader": "^9.1.3",
    "@babel/core": "^7.22.0",
    "@babel/preset-env": "^7.22.0",
    "@babel/plugin-transform-modules-commonjs": "^7.22.0",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    
    "snyk": "^1.100.0",
    "npm-audit-resolver": "^3.0.0",
    
    "crypto-js": "^4.1.1",
    "js-sha256": "^0.9.0"
  },
  "optionalDependencies": {
    "usb": "^2.9.0"
  },
  "files": [
    "dist/",
    "js/",
    "modules/",
    "security/",
    "css/",
    "assets/",
    "index.html",
    "manifest.json",
    "service-worker.js",
    "README.md",
    "SECURITY.md"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "config": {
    "port": 3000,
    "ssl_port": 3443,
    "build_dir": "dist",
    "security_level": "high"
  }
{
  "scripts": {
    "build:official": "node build/create-official-release.js",
    "verify:build": "node build/verify-official-build.js",
    "security:clone-check": "node security/test-clone-protection.js",
    
    "release:patch": "npm version patch && npm run build:official",
    "release:minor": "npm version minor && npm run build:official", 
    "release:major": "npm version major && npm run build:official"
  }
}
